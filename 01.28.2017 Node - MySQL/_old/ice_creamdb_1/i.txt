Instructions

Throughout this class we are going to be working on creating an application
 that takes in music data to create personalized playlists

Make sure to get as far as you can over the course of these assignments as
 the coding you do here will be extremely useful to you when you begin working
 on the homework
For now we will simply be creating your database in MySQL and then creating
 a connection to said database using Node. Remember, you must create a database
 before attempting to connect to it. Doing otherwise will return an error.

BONUS: Using MySQL Workbench, create a table in your database with four columns...

Primary Key of "ID" which auto-increments
A column called "title"
A column called "artist"
A column called "genre"
BONUS: Using MySQL Workbench, populate your table with a few rows of dummy data

BONUS: Start looking into how you can use the MySQL package to 
read data from a MySQL database

#2 ####################################################################

Instructions

It's time to start making our playlist application a little more functional through including all four C.R.U.D elements within it.

Add in some pieces of code that CREATE, UPDATE, and DELETE specific pieces of data from your MySQL database. Make sure to include a READ statement at the end as well to ensure that the changes you are making are working properly.

BONUS: After successfully adding CRUD to your application, it's time to test your mettle and see if you can make it so this app is more dynamic. Add the ability for users to dynamically input their own data into the database using either the Prompt or Promptly NPM packages.

HINT: Recall that you can create MySQL queries which include variables using question marks. Proper usage of this will help you quite a bit.

HINT: Remember to take into account the scope of Prompt/Promptly when putting your application together.

